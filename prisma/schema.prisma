// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int               @id @default(autoincrement())
  email         String            @db.VarChar(50)
  name          String            @db.VarChar(20)
  provider      String            @db.VarChar(20)
  description   String?           @db.VarChar(200)
  snsId         String            @map("sns_id") @db.VarChar(200)
  image         String
  refreshToken  String?           @map("refresh_token")
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt @map("updated_at")
  workSpaceList WorkSpaceMember[]

  @@unique([snsId, provider], name: "snsIdentify")
  @@map("users")
}

model WorkSpaceMember {
  user        User       @relation(fields: [userId], references: [id])
  userId      Int        @map("user_id")
  workSpace   WorkSpace  @relation(fields: [workSpaceId], references: [id])
  workSpaceId Int        @map("work_space_id")
  role        MemberRole
  isInvite    Boolean    @map("is_invite")

  @@unique([userId, workSpaceId], name: "workSpaceMemberId")
  @@map("work_space_member")
}

model WorkSpace {
  id          Int               @id @default(autoincrement())
  name        String            @db.VarChar(30)
  member      WorkSpaceMember[]
  meetingRoom MeetingRoom[]
  createdAt   DateTime          @default(now()) @map("created_at")

  @@map("work_space")
}

model MeetingRoom {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(20)
  workSpaceId Int       @map("work_space_id")
  workSpace   WorkSpace @relation(fields: [workSpaceId], references: [id])
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("meeting_room")
}

enum MemberRole {
  Member
  Admin
}
